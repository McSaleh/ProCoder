//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LBMS_Pro.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LBMS_Pro.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap automation {
            get {
                object obj = ResourceManager.GetObject("automation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap create {
            get {
                object obj = ResourceManager.GetObject("create", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CW_Logo_2x {
            get {
                object obj = ResourceManager.GetObject("CW_Logo@2x", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 00:90:4C:C5:12:38
        ///78:44:76:B1:93:E0
        ///44:6D:57:D0:24:AA.
        /// </summary>
        internal static string duplicate_mac {
            get {
                return ResourceManager.GetString("duplicate_mac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap facebook {
            get {
                object obj = ResourceManager.GetObject("facebook", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap hub {
            get {
                object obj = ResourceManager.GetObject("hub", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap info {
            get {
                object obj = ResourceManager.GetObject("info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap info__1_ {
            get {
                object obj = ResourceManager.GetObject("info (1)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap info__2_ {
            get {
                object obj = ResourceManager.GetObject("info (2)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap instagram__1_ {
            get {
                object obj = ResourceManager.GetObject("instagram (1)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Janna_LT_Bold {
            get {
                object obj = ResourceManager.GetObject("Janna_LT_Bold", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] JannaLT_Regular {
            get {
                object obj = ResourceManager.GetObject("JannaLT_Regular", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap logo {
            get {
                object obj = ResourceManager.GetObject("logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap logout {
            get {
                object obj = ResourceManager.GetObject("logout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /system scheduler
        ///add interval=1d name=SNA on-event=&quot;:local fname \&quot;FNA\&quot;;\r\
        ///    \n:local date [/system clock get date];\r\
        ///    \n:local months {\&quot;jan\&quot;=\&quot;01\&quot;;\&quot;feb\&quot;=\&quot;02\&quot;;\&quot;mar\&quot;=\&quot;03\&quot;;\&quot;apr\&quot;=\&quot;04\
        ///    \&quot;;\&quot;may\&quot;=\&quot;05\&quot;;\&quot;jun\&quot;=\&quot;06\&quot;;\&quot;jul\&quot;=\&quot;07\&quot;;\&quot;aug\&quot;=\&quot;08\&quot;;\&quot;sep\&quot;=\&quot;0\
        ///    9\&quot;;\&quot;oct\&quot;=10;\&quot;nov\&quot;=11;\&quot;dec\&quot;=12};\r\
        ///    \n:local day [:tonum [:pick \$date 4 6]];\r\
        ///    \n:local year [:tonum [:pick \$date 7 11]];\r\
        ///    \n:local month [:pick \$date 0 3];\r\
        ///    \n:local mm (:\$months-&gt;\$ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MikSBrsc {
            get {
                return ResourceManager.GetString("MikSBrsc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /system scheduler
        ///add interval=1d name=SNA on-event=&quot;:local fname \&quot;FNA\&quot;;\r\
        ///    \n:local date [/system clock get date];\r\
        ///    \n:local months {\&quot;jan\&quot;=\&quot;01\&quot;;\&quot;feb\&quot;=\&quot;02\&quot;;\&quot;mar\&quot;=\&quot;03\&quot;;\&quot;apr\&quot;=\&quot;04\
        ///    \&quot;;\&quot;may\&quot;=\&quot;05\&quot;;\&quot;jun\&quot;=\&quot;06\&quot;;\&quot;jul\&quot;=\&quot;07\&quot;;\&quot;aug\&quot;=\&quot;08\&quot;;\&quot;sep\&quot;=\&quot;0\
        ///    9\&quot;;\&quot;oct\&quot;=10;\&quot;nov\&quot;=11;\&quot;dec\&quot;=12};\r\
        ///    \n:local day [:tonum [:pick \$date 4 6]];\r\
        ///    \n:local year [:tonum [:pick \$date 7 11]];\r\
        ///    \n:local month [:pick \$date 0 3];\r\
        ///    \n:local mm (:\$months-&gt;\$ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MikSMBU {
            get {
                return ResourceManager.GetString("MikSMBU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /ip firewall mangle
        ///add action=mark-packet chain=prerouting dst-address=!10.0.0.1 new-packet-mark=Pro-down passthrough=no
        ////queue type
        ///add kind=pcq name=Pro-down pcq-burst-time=30s pcq-classifier=dst-address 
        ///add kind=pcq name=Pro-up pcq-burst-time=30s pcq-classifier=src-address
        ////system script
        ///add name=ProLimitSpeed owner=admin policy=ftp,reboot,read,write,policy,test,password,sniff,sensitive source=&quot;{\r\
        ///\n:local i;\
        ///\n\r\
        ///\n:local c 1212;\r\
        ///\n\
        ///\n:set i [ :len [/ip hotspot active find] ];\
        ///\n\ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MikSQTAS {
            get {
                return ResourceManager.GetString("MikSQTAS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /system scheduler
        ///add interval=1d name=SNA on-event=&quot;:local fname \&quot;FNA\&quot;;\r\
        ///    \n:local date [/system clock get date];\r\
        ///    \n:local months {\&quot;jan\&quot;=\&quot;01\&quot;;\&quot;feb\&quot;=\&quot;02\&quot;;\&quot;mar\&quot;=\&quot;03\&quot;;\&quot;apr\&quot;=\&quot;04\
        ///    \&quot;;\&quot;may\&quot;=\&quot;05\&quot;;\&quot;jun\&quot;=\&quot;06\&quot;;\&quot;jul\&quot;=\&quot;07\&quot;;\&quot;aug\&quot;=\&quot;08\&quot;;\&quot;sep\&quot;=\&quot;0\
        ///    9\&quot;;\&quot;oct\&quot;=10;\&quot;nov\&quot;=11;\&quot;dec\&quot;=12};\r\
        ///    \n:local day [:tonum [:pick \$date 4 6]];\r\
        ///    \n:local year [:tonum [:pick \$date 7 11]];\r\
        ///    \n:local month [:pick \$date 0 3];\r\
        ///    \n:local mm (:\$months-&gt;\$ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MikSUMBU {
            get {
                return ResourceManager.GetString("MikSUMBU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap multitask {
            get {
                object obj = ResourceManager.GetObject("multitask", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap N14 {
            get {
                object obj = ResourceManager.GetObject("N14", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap NicePng_balance_icon_png_4989014 {
            get {
                object obj = ResourceManager.GetObject("NicePng_balance-icon-png_4989014", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pngegg__5_ {
            get {
                object obj = ResourceManager.GetObject("pngegg (5)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Pro {
            get {
                object obj = ResourceManager.GetObject("Pro", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap router {
            get {
                object obj = ResourceManager.GetObject("router", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /system scheduler
        ///add interval=2m name=LG on-event=&quot;if ( [/file get [/file find name=duplicate-m\
        ///    ac.txt] size] &gt; 0 ) do={ \r\
        ///    \n:local allmac [/file get [/file find name=\&quot;duplicate-mac.txt\&quot;] content\
        ///    s] ;\r\
        ///    \n:local allmaclen [ :len \$allmac ] ;\r\
        ///    \n:local linenum ((\$allmaclen -1)/18);\r\
        ///    \n:local n 0;\r\
        ///    \n:for i from=1 to=\$linenum do={\r\
        ///    \n:local lgmac [:pick \$allmac \$n (\$n+17)] ;\r\
        ///    \n:set n (\$i*19);\r\
        ///    \n/ip hotspot cookie remove [find where [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SecLGDmac {
            get {
                return ResourceManager.GetString("SecLGDmac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /ip firewall layer7-protocol
        ///add name=FREEDOM regexp=&quot;^.+(b3q.be|7q3.be|89u.uk|g55.be|3g5.de|5t2.be|9l4.de|v6k.be|1yf.de|2yf.de|53r.de|93.ye|YF.de|8u6.de|f.de|fer.net|freedom.net|your-freedom|your-freedom.net|freedom.de|63z.de|49o.de|q1y.be)&quot;
        ////ip firewall filter
        ///add action=drop chain=input layer7-protocol=FREEDOM
        ///add action=drop chain=output layer7-protocol=FREEDOM
        ////ip firewall raw
        ///add action=add-src-to-address-list address-list=FREEDOM address-list-timeout=5m chain=prerouting content=freedom in-inter [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SecSFrDoBU {
            get {
                return ResourceManager.GetString("SecSFrDoBU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap shield {
            get {
                object obj = ResourceManager.GetObject("shield", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap small_logo {
            get {
                object obj = ResourceManager.GetObject("small_logo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap tiktok {
            get {
                object obj = ResourceManager.GetObject("tiktok", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap twitter {
            get {
                object obj = ResourceManager.GetObject("twitter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap whatsapp__1_ {
            get {
                object obj = ResourceManager.GetObject("whatsapp (1)", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap youtube {
            get {
                object obj = ResourceManager.GetObject("youtube", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
